# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input ArticleDto {
  body: String!
  description: String!
  tagList: [String!]!
  title: String!
}

type ArticleEntity {
  body: String!
  createdAt: DateTime!
  creator: UserEntity!
  description: String!
  favorites: Float!
  id: ID!
  tagList: [String!]!
  title: String!
  updatedAt: DateTime!
}

input ArticlesFitlerInput {
  creator: String!
}

input CreateUserInput {
  email: String!
  password: String!
  username: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type GetAllArticles {
  count: Int!
  items: [ArticleEntity!]!
}

input LoginUserDto {
  email: String!
  password: String!
}

type Mutation {
  createArticle(createArticle: ArticleDto!): ArticleEntity!
  createUser(createUser: CreateUserInput!): UserEntity!
  deleteArticle(id: Float!): Boolean!
  updateArticle(updateArticle: UpdateArticleDto!): ArticleEntity!
  updateUser(updateUser: UpdateUserInput!): UserEntity!
}

input PageInput {
  limit: Int = 10
  offset: Int = 0
}

type Query {
  getAllArticles(query: QueryArticles!): GetAllArticles!
  getArticle(id: Float!): ArticleEntity!
  getUser(id: Float!): UserEntity!
  loginUser(loginUser: LoginUserDto!): UserLoginResponse!
}

input QueryArticles {
  filters: ArticlesFitlerInput
  pagination: PageInput
}

input UpdateArticleDto {
  body: String!
  description: String!
  id: Float!
  tagList: [String!]!
  title: String!
}

input UpdateUserInput {
  email: String
  id: ID!
  username: String
}

type UserEntity {
  email: String!
  id: ID!
  password: String!
  username: String!
}

type UserLoginResponse {
  token: String!
  user: UserEntity!
}